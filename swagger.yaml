openapi: 3.0.0
info:
  title: API Documentation
  version: 1.0.0
  description: Esta es la documentación de la API de nuestra aplicación.
servers: []
components:
  schemas:
    Usuario:
      type: object
      properties:
        username:
          type: string
          description: Nombre de usuario
        password:
          type: string
          format: password
          description: Contraseña del usuario (se guardará encriptada)
      required:
        - username
        - password
    Proveedor:
      type: object
      properties:
        nombre:
          type: string
          description: Nombre del proveedor
        direccion:
          type: string
          description: Dirección del proveedor
        contacto:
          type: string
          description: Información de contacto del proveedor
        productos_entregados:
          type: array
          description: Productos entregados por el proveedor
          items:
            type: object
            properties:
              producto_id:
                type: string
                description: ID del producto entregado
              cantidad:
                type: number
                description: Cantidad del producto entregado
              fecha_entrega:
                type: string
                format: date-time
                description: Fecha y hora de la entrega del producto
    Comprador:
      type: object
      properties:
        nombre:
          type: string
          description: Nombre del comprador
        direccion:
          type: string
          description: Dirección del comprador
        contacto:
          type: string
          description: Información de contacto del comprador
        compras_realizadas:
          type: array
          description: Compras realizadas por el comprador
          items:
            type: object
            properties:
              precio_unitario:
                type: number
                description: Precio unitario del producto comprado
              producto_id:
                type: string
                description: ID del producto comprado
              cantidad:
                type: number
                description: Cantidad del producto comprado
              fecha_venta:
                type: string
                format: date-time
                description: Fecha y hora de la venta
              vendedor_id:
                type: string
                description: ID del vendedor asociado a la venta
    Vendedor:
      type: object
      properties:
        _id:
          type: string
        nombre:
          type: string
        direccion:
          type: string
        contacto:
          type: string
        ventas_realizadas:
          type: array
          items:
            type: object
            properties:
              producto_id:
                type: string
              cantidad:
                type: integer
              fecha_venta:
                type: string
              comprador_id:
                type: string
              precio_unitario:
                type: number
    Producto:
      type: object
      properties:
        _id:
          type: string
        nombre:
          type: string
        marca:
          type: string
        descripcion:
          type: string
        precio:
          type: number
        clase:
          type: string
        subclase:
          type: string
        stock:
          type: integer
        proveedor_id:
          type: string
        ventas:
          type: array
          items:
            type: object
            properties:
              vendedor_id:
                type: string
              cantidad:
                type: integer
              fecha_venta:
                type: string
              comprador_id:
                type: string
              precio_unitario:
                type: number
    Transaccion:
      type: object
      properties:
        _id:
          type: string
        tipo:
          type: string
          enum: ['venta', 'compra']
        vendedor_id:
          type: string
        comprador_id:
          type: string
        producto_id:
          type: string
        cantidad:
          type: integer
        precio_unitario:
          type: number
        fecha_transaccion:
          type: string
responses:
    UsuarioRegistrado:
      description: Usuario registrado exitosamente
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Usuario Registrado
    LoginExitoso:
      description: Usuario ha iniciado sesión correctamente
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Usuario ha iniciado sesión correctamente
              token:
                type: string
                description: Token JWT para autenticación
    ErrorCredenciales:
      description: Usuario no encontrado o credenciales inválidas
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                examples:
                  UsuarioNoEncontrado:
                    value: Usuario no encontrado
                  CredencialesInvalidas:
                    value: Credenciales inválidas
    ErrorGeneral:
      description: Error en el servidor
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Error en el servidor
    ProveedorCreado:
      description: Proveedor creado exitosamente
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Proveedor creado exitosamente
    ListaProveedores:
      description: Lista de proveedores obtenida exitosamente
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Proveedor'
    ProveedorObtenido:
      description: Proveedor obtenido exitosamente
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Proveedor'
    ProveedorNoEncontrado:
      description: Proveedor no encontrado
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Proveedor no encontrado
    ProveedorActualizado:
      description: Proveedor actualizado exitosamente
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Proveedor actualizado exitosamente
    ProveedorEliminado:
      description: Proveedor eliminado exitosamente
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Proveedor eliminado exitosamente
    ErrorIdInvalido:
      description: ID no válido
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: ID no válido
paths:
  /register:
    post:
      summary: Registrar un nuevo usuario
      tags: 
        - Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
                           $ref: '#/components/schemas/Usuario'
      responses:
        '201':
          $ref: '#/components/responses/UsuarioRegistrado'
        '500':
          $ref: '#/components/responses/ErrorGeneral'

  /login:
    post:
      summary: Iniciar sesión de un usuario
      tags: 
        - Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          $ref: '#/components/responses/LoginExitoso'
        '400':
          $ref: '#/components/responses/ErrorCredenciales'
        '500':
          $ref: '#/components/responses/ErrorGeneral'

  /proveedores:
    post:
      summary: Crear un nuevo proveedor
      tags:
        - Proveedores
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Proveedor'
      responses:
        '201':
          $ref: '#/components/responses/ProveedorCreado'
        '500':
          $ref: '#/components/responses/ErrorGeneral'
    get:
      summary: Obtener todos los proveedores
      tags:
        - Proveedores
      responses:
        '200':
          $ref: '#/components/responses/ListaProveedores'
        '500':
          $ref: '#/components/responses/ErrorGeneral'

  /proveedores/{id}:
    get:
      summary: Obtener un proveedor por su ID
      tags:
        - Proveedores
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          $ref: '#/components/responses/ProveedorObtenido'
        '404':
          $ref: '#/components/responses/ProveedorNoEncontrado'
        '500':
          $ref: '#/components/responses/ErrorGeneral'
    put:
      summary: Actualizar un proveedor por su ID
      tags:
        - Proveedores
      parameters:
        - $ref: '#/components/parameters/IdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Proveedor'
      responses:
        '200':
          $ref: '#/components/responses/ProveedorActualizado'
        '404':
          $ref: '#/components/responses/ProveedorNoEncontrado'
        '500':
          $ref: '#/components/responses/ErrorGeneral'
    delete:
      summary: Eliminar un proveedor por su ID
      tags:
        - Proveedores
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          $ref: '#/components/responses/ProveedorEliminado'
        '404':
          $ref: '#/components/responses/ProveedorNoEncontrado'
        '400':
          $ref: '#/components/responses/ErrorIdInvalido'
        '500':
          $ref: '#/components/responses/ErrorGeneral'

  /compradores:
    post:
      summary: Crear un nuevo comprador
      tags:
        - Compradores
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comprador'
      responses:
        '201':
          $ref: '#/components/responses/CompradorCreado'
        '400':
          $ref: '#/components/responses/ErrorAlCrearComprador'
    get:
      summary: Obtener todos los compradores
      tags:
        - Compradores
      responses:
        '200':
          $ref: '#/components/responses/ListaCompradores'
        '400':
          $ref: '#/components/responses/ErrorAlObtenerCompradores'

  /compradores/{id}:
    get:
      summary: Obtener un comprador por su ID
      tags:
        - Compradores
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          $ref: '#/components/responses/CompradorObtenido'
        '404':
          $ref: '#/components/responses/CompradorNoEncontrado'
        '400':
          $ref: '#/components/responses/ErrorAlObtenerComprador'
    put:
      summary: Actualizar un comprador por su ID
      tags:
        - Compradores
      parameters:
        - $ref: '#/components/parameters/IdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comprador'
      responses:
        '200':
          $ref: '#/components/responses/CompradorActualizado'
        '404':
          $ref: '#/components/responses/CompradorNoEncontrado'
    delete:
      summary: Eliminar un comprador por su ID
      tags:
        - Compradores
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          $ref: '#/components/responses/CompradorEliminado'
        '404':
          $ref: '#/components/responses/CompradorNoEncontrado'
        '400':
          $ref: '#/components/responses/ErrorIdInvalido'
        '500':
          $ref: '#/components/responses/ErrorAlEliminarComprador'

  /vendedores:
    get:
      summary: Obtener todos los vendedores
      tags:
        - Vendedores
      responses:
        '200':
          $ref: '#/components/responses/ListaVendedores'
        '500':
          $ref: '#/components/responses/ErrorGeneral'
    post:
      summary: Crear un nuevo vendedor
      tags:
        - Vendedores
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vendedor'
      responses:
        '201':
          $ref: '#/components/responses/VendedorCreado'
        '500':
          $ref: '#/components/responses/ErrorGeneral'

  /vendedores/{id}:
    get:
      summary: Obtener un vendedor por ID
      tags:
        - Vendedores
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          $ref: '#/components/responses/VendedorObtenido'
        '404':
          $ref: '#/components/responses/VendedorNoEncontrado'
        '500':
          $ref: '#/components/responses/ErrorGeneral'
    put:
      summary: Actualizar un vendedor por ID
      tags:
        - Vendedores
      parameters:
        - $ref: '#/components/parameters/IdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vendedor'
      responses:
        '200':
          $ref: '#/components/responses/VendedorActualizado'
        '404':
          $ref: '#/components/responses/VendedorNoEncontrado'
        '500':
          $ref: '#/components/responses/ErrorGeneral'
    delete:
      summary: Eliminar un vendedor por ID
      tags:
        - Vendedores
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          $ref: '#/components/responses/VendedorEliminado'
        '404':
          $ref: '#/components/responses/VendedorNoEncontrado'
        '500':
          $ref: '#/components/responses/ErrorGeneral'

  /productos:
    get:
      summary: Obtener todos los productos
      tags:
        - Productos
      responses:
        '200':
          $ref: '#/components/responses/ListaProductos'
        '500':
          $ref: '#/components/responses/ErrorGeneral'
    post:
      summary: Crear un nuevo producto
      tags:
        - Productos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Producto'
      responses:
        '201':
          $ref: '#/components/responses/ProductoCreado'
        '500':
          $ref: '#/components/responses/ErrorGeneral'

  /productos/{id}:
    get:
      summary: Obtener un producto por su ID
      tags:
        - Productos
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          $ref: '#/components/responses/ProductoObtenido'
        '404':
          $ref: '#/components/responses/ProductoNoEncontrado'
        '500':
          $ref: '#/components/responses/ErrorGeneral'
    put:
      summary: Actualizar un producto por su ID
      tags:
        - Productos
      parameters:
        - $ref: '#/components/parameters/IdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Producto'
      responses:
        '200':
          $ref: '#/components/responses/ProductoActualizado'
        '404':
          $ref: '#/components/responses/ProductoNoEncontrado'
        '500':
          $ref: '#/components/responses/ErrorGeneral'
    delete:
      summary: Eliminar un producto por su ID
      tags:
        - Productos
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          $ref: '#/components/responses/ProductoEliminado'
        '404':
          $ref: '#/components/responses/ProductoNoEncontrado'
        '500':
          $ref: '#/components/responses/ErrorGeneral'

  /transacciones:
    get:
      summary: Obtener todas las transacciones
      tags:
        - Transacciones
      responses:
        '200':
          $ref: '#/components/responses/ListaTransacciones'
        '500':
          $ref: '#/components/responses/ErrorGeneral'
    post:
      summary: Crear una nueva transacción
      tags:
        - Transacciones
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaccion'
      responses:
        '201':
          $ref: '#/components/responses/TransaccionCreada'
        '400':
          $ref: '#/components/responses/ErrorAlCrearTransaccion'
        '500':
          $ref: '#/components/responses/ErrorGeneral'

  /transacciones/{id}:
    get:
      summary: Obtener una transacción por su ID
      tags:
        - Transacciones
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          $ref: '#/components/responses/TransaccionObtenida'
        '404':
          $ref: '#/components/responses/TransaccionNoEncontrada'
        '500':
          $ref: '#/components/responses/ErrorGeneral'
    put:
      summary: Actualizar una transacción por su ID
      tags:
        - Transacciones
      parameters:
        - $ref: '#/components/parameters/IdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaccion'
      responses:
        '200':
          $ref: '#/components/responses/TransaccionActualizada'
        '404':
          $ref: '#/components/responses/TransaccionNoEncontrada'
        '500':
          $ref: '#/components/responses/ErrorGeneral'
    delete:
      summary: Eliminar una transacción por su ID
      tags:
        - Transacciones
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          $ref: '#/components/responses/TransaccionEliminada'
        '404':
          $ref: '#/components/responses/TransaccionNoEncontrada'
        '500':
          $ref: '#/components/responses/ErrorGeneral'
